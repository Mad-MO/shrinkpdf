#!/usr/bin/env bash

# File:    shrinkpdf
# Author:  Martin Ochs
# License: MIT
# Brief:   Script to shrink PDF files

# Script info
script_name="shrinkpdf"
script_version="v1.1"
script_tools="date tr gs"



# Activate debug output (uncomment if needed)
#set -x

# From here on warn about unset variables
set -u

# Definition of colors
color_off="\033[0m"
color_black="\033[0;30m"
color_red="\033[0;31m"
color_green="\033[0;32m"
color_yellow="\033[0;33m"
color_blue="\033[0;34m"
color_purple="\033[0;35m"
color_cyan="\033[0;36m"
color_white="\033[0;37m"
color_bold_black="\033[1;30m"
color_bold_red="\033[1;31m"
color_bold_green="\033[1;32m"
color_bold_yellow="\033[1;33m"
color_bold_blue="\033[1;34m"
color_bold_purple="\033[1;35m"
color_bold_cyan="\033[1;36m"
color_bold_white="\033[1;37m"

# Definition of used theme colors
if test -t 1; then
  color_header=$color_bold_red
  color_time=$color_bold_cyan
  color_section=$color_bold_yellow
  color_mark=$color_bold_green
  color_error=$color_bold_red
else
  color_off=
  color_header=
  color_time=
  color_section=
  color_mark=
  color_error=
fi

# Show Terminal Environment and script startup info
echo -en "$color_off""Running $color_mark$script_name$color_off version $color_mark$script_version$color_off as user $color_mark$(id -un)$color_off"
if   [ $# -eq 1 ]; then
  echo -e " with parameter $color_mark$@$color_off"
elif [ $# -gt 1 ]; then
  echo -en " with $color_mark$#$color_off parameters"
  for x in "$@"; do
    echo -en " $color_mark$x$color_off"
  done
else
  echo -e " with $color_mark""no""$color_off parameters"
fi
echo

# Check Parameters
if [ $# -eq 0 ]; then
  echo -e "No parameters given! Try $color_mark\"-h\"$color_off or $color_mark\"--help\"$color_off."
  exit 1
fi
for x in $*; do        # Run through all parameters
  if [ "$x" = "-h" ] || [ "$x" = "--help" ]; then
    echo "Usage: shrinkpdf [OPTIONS] FILES"
    echo
    echo "shrinkpdf will shrink the given PDF."
    echo
    echo "Options"
    echo "-h, --help      This help"
    echo
    echo "Exit status:"
    echo " 0  if OK"
    echo " 1  if ERROR"
    exit 0
  elif [ ! -f "$x" ]; then
    echo -e "File $color_mark$x$color_off does not exist!"
    exit 1
  elif [ ! -r "$x" ]; then
    echo -e "File $color_mark$x$color_off is not readable!"
    exit 1
  fi
done

# Show script startup info
echo -ne "$color_header"
echo "     _          _       _              _  __ "
echo " ___| |__  _ __(_)_ __ | | ___ __   __| |/ _|"
echo "/ __| '_ \| '__| | '_ \| |/ / '_ \ / _\` | |_ "
echo "\__ \ | | | |  | | | | |   <| |_) | (_| |  _|"
echo "|___/_| |_|_|  |_|_| |_|_|\_\ .__/ \__,_|_|  "
echo "                            |_|              "
echo -e "$color_header$script_name $script_version$color_off"
echo

# Check for needed tools
for x in $script_tools; do # Run through tool list
  which $x > /dev/null
  if [ $? -ne 0 ]; then
    echo -e "Tool $color_mark$x$color_off is missing!"
    exit 1
  fi
done

# Start time measurement
echo -e "Starting $color_time$(date '+%Y-%m-%d %H:%M:%S')$color_off"
script_start=$(date '+%s')
echo

##############################################
# Script Start - Implement your script below #
###############################################################################

filecount=$#
filenum=0
for inputfile in "$@"; do
  # Get name parts of old file
  filename="${inputfile##*/}"
  directory="${inputfile:0:${#inputfile} - ${#filename}}"
  basename="${inputfile%.[^.]*}"
  extension=$(echo "${inputfile:${#basename} + 1}" | tr [:upper:] [:lower:])

  # Handle file shrinking
  filenum=$((filenum+1))
  echo -ne "$color_section[$filenum/$filecount]$color_off "

  if [ "$extension" == "pdf" ]; then
    outputfile="$basename.shrinked.pdf"
    echo -e "Shrinking $color_mark'"$(basename "$inputfile")"'$color_off to $color_mark'"$(basename "$outputfile")"'$color_off"
    gs -sDEVICE=pdfwrite -dPDFSETTINGS=/ebook -q -o "$outputfile" "$inputfile"
    if [ $? -ne 0 ]; then
      echo -e "$color_mark'"$inputfile"'$color_error could not be shrinked!$color_off"
      rm -f "$outputfile"
    fi
  else
    echo -e "$color_mark'"$inputfile"'$color_error has a wrong extension!$color_off"
  fi
done

###############################################################################
# Script End - Implement your script above #
############################################

# Stop time measurement
echo
echo -e "Finished $color_time$(date '+%Y-%m-%d %H:%M:%S')$color_off"
script_end="$(date '+%s')"
script_duration="$(( $script_end - $script_start ))"
echo -e "Duration $color_time$script_duration sec$color_off"
echo

# Exit script
exit 0
